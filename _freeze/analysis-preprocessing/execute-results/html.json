{
  "hash": "2abeb478e9960bcb1add307f40ca7274",
  "result": {
    "engine": "knitr",
    "markdown": "# Loading and preparing simulation results {#analysis-preprocessing}\n\n## 📊 Analysis Pipeline for Simulation Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDiagrammeR::DiagrammeR(\"\n  flowchart LR\n    A[💾 Simulation outputs<br/>BehaviorSpace CSV files] -->\n    B[📥 Import data<br/>R: read.csv(), tidyverse]\n    B --> C[🧹 Clean & prepare<br/>Data wrangling, filtering, reshaping]\n    C --> D[📈 Explore<br/>Descriptive plots, distributions, correlations]\n    D --> E[📊 Analyse<br/>Statistical models, sensitivity analysis]\n    E --> F[🖼️ Visualise<br/>Publication-ready plots, dashboards]\n    F --> G[🧩 Interpret<br/>Compare with hypotheses, archaeological data]\n    G --> H[📘 Report & share<br/>RMarkdown, GitHub, Zenodo DOI]\n    H --> A[🔁 Feedback loop<br/>Refine model or experiment design]\n    style A fill:#f0f9f0,stroke:#009900,stroke-width:1px\n    style B fill:#e6f3ff,stroke:#2176ff,stroke-width:1px\n    style C fill:#fffbea,stroke:#c4a000,stroke-width:1px\n    style D fill:#fef6e4,stroke:#ff8c00,stroke-width:1px\n    style E fill:#f3e6ff,stroke:#9933ff,stroke-width:1px\n    style F fill:#fff0f5,stroke:#cc3366,stroke-width:1px\n    style G fill:#fdf2ff,stroke:#9933ff,stroke-width:1px\n    style H fill:#fef6e4,stroke:#c4a000,stroke-width:1px\n\", type = \"mermaid\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"DiagrammeR html-widget html-fill-item\" id=\"htmlwidget-ec0169472c830cbee05b\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ec0169472c830cbee05b\">{\"x\":{\"diagram\":\"\\n  flowchart LR\\n    A[💾 Simulation outputs<br/>BehaviorSpace CSV files] -->\\n    B[📥 Import data<br/>R: read.csv(), tidyverse]\\n    B --> C[🧹 Clean & prepare<br/>Data wrangling, filtering, reshaping]\\n    C --> D[📈 Explore<br/>Descriptive plots, distributions, correlations]\\n    D --> E[📊 Analyse<br/>Statistical models, sensitivity analysis]\\n    E --> F[🖼️ Visualise<br/>Publication-ready plots, dashboards]\\n    F --> G[🧩 Interpret<br/>Compare with hypotheses, archaeological data]\\n    G --> H[📘 Report & share<br/>RMarkdown, GitHub, Zenodo DOI]\\n    H --> A[🔁 Feedback loop<br/>Refine model or experiment design]\\n    style A fill:#f0f9f0,stroke:#009900,stroke-width:1px\\n    style B fill:#e6f3ff,stroke:#2176ff,stroke-width:1px\\n    style C fill:#fffbea,stroke:#c4a000,stroke-width:1px\\n    style D fill:#fef6e4,stroke:#ff8c00,stroke-width:1px\\n    style E fill:#f3e6ff,stroke:#9933ff,stroke-width:1px\\n    style F fill:#fff0f5,stroke:#cc3366,stroke-width:1px\\n    style G fill:#fdf2ff,stroke:#9933ff,stroke-width:1px\\n    style H fill:#fef6e4,stroke:#c4a000,stroke-width:1px\\n\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## Setting up our script environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(readr)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexperiments_path <- \"assets/netlogo/experiments/Artificial Anasazi_experiments \"\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_mapping <- c(\"historical households\" = \"blue\", \n                   \"simulation households\" = \"darkred\")\n```\n:::\n\n\n## Single run\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpname <- \"experiment single run\"\n```\n:::\n\n\nRead output:\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_single <- readr::read_csv(paste0(experiments_path, expname, \"-table.csv\"), skip = 6)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 552 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): map-view\ndbl (9): [run number], fertility, death-age, harvest-variance, fertility-end...\nlgl (1): historic-view?\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nPlot trajectories of metrics:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_name <- paste0(experiments_path, expname, \"-trajectories.png\")\n\npng(plot_name, width = 840, height = 540)\n\nggplot(results_single) +  \n  geom_line(aes(x = `[step]`, y = `historical-total-households`, color = \"historical data\"),\n            linewidth = 1.2) +\n  geom_line(aes(x = `[step]`, y = `total-households`, color = \"simulation households\"),\n            linewidth = 1.2) +\n  labs(x = \"steps\", y = \"households\") +\n  scale_color_manual(name = \"\", values = color_mapping) +\n  theme(legend.position = \"right\")\n\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsvg \n  2 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(plot_name)\n```\n\n::: {.cell-output-display}\n![](assets/netlogo/experiments/Artificial Anasazi_experiments experiment single run-trajectories.png)\n:::\n:::\n\n\n## Multiple runs in single configuration\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpname <- \"experiment multiple runs\"\n```\n:::\n\n\nRead output:\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_single <- readr::read_csv(paste0(experiments_path, expname, \"-table.csv\"), skip = 6)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 5520 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): map-view\ndbl (9): [run number], fertility, death-age, harvest-variance, fertility-end...\nlgl (1): historic-view?\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nPlot trajectories of metrics:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_name <- paste0(experiments_path, expname, \"-trajectories.png\")\n\npng(plot_name, width = 840, height = 540)\n\nggplot(results_single) +  \n  geom_line(aes(x = `[step]`, y = `total-households`, color = `[run number]`, group = `[run number]`),\n            linewidth = 1.2) +\n  geom_line(aes(x = `[step]`, y = `historical-total-households`), \n            color = color_mapping[\"historical households\"],\n            linewidth = 1.2, linetype = 2) +\n  labs(x = \"steps\", y = \"households\") +\n  theme(legend.position = \"right\")\n\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsvg \n  2 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(plot_name)\n```\n\n::: {.cell-output-display}\n![](assets/netlogo/experiments/Artificial Anasazi_experiments experiment multiple runs-trajectories.png)\n:::\n:::\n\n\n## Parameter exploration - regular intervals\n\n### One parameter\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpname <- \"experiment harvest adjustment\"\n```\n:::\n\n\nRead output:\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_harvest_adj <- readr::read_csv(paste0(experiments_path, expname, \"-table.csv\"), skip = 6)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 104880 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): map-view\ndbl (9): [run number], fertility, death-age, harvest-variance, fertility-end...\nlgl (1): historic-view?\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nPlot trajectories of metrics:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_name <- paste0(experiments_path, expname, \"-trajectories.png\")\n\npng(plot_name, width = 840, height = 540)\n\nggplot(results_harvest_adj) +  \n  geom_line(aes(x = `[step]`, y = `total-households`, color = `harvest-adjustment`, group = `[run number]`),\n            linewidth = 1.2) +\n  geom_line(aes(x = `[step]`, y = `historical-total-households`), color = \"black\",\n            linewidth = 1.2, linetype = 2) +\n  labs(x = \"steps\", y = \"households\") +\n  theme(legend.position = \"right\")\n\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsvg \n  2 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(plot_name)\n```\n\n::: {.cell-output-display}\n![](assets/netlogo/experiments/Artificial Anasazi_experiments experiment harvest adjustment-trajectories.png)\n:::\n:::\n\n\n### Two parameter\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpname <- \"experiment harvest adjustment variance\"\n```\n:::\n\n\nRead output:\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_harvest_adj <- readr::read_csv(paste0(experiments_path, expname, \"-table.csv\"), skip = 6)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 441600 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): map-view\ndbl (9): [run number], fertility, death-age, harvest-variance, fertility-end...\nlgl (1): historic-view?\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nPlot trajectories of metrics:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_name <- paste0(experiments_path, expname, \"-trajectories.png\")\n\npng(plot_name, width = 840, height = 540)\n\nggplot(results_harvest_adj) +  \n  geom_line(aes(x = `[step]`, y = `total-households`, group = `[run number]`),\n            color = color_mapping[\"simulation households\"],\n            linewidth = 1.2) +\n  geom_line(aes(x = `[step]`, y = `historical-total-households`), \n            color = color_mapping[\"historical households\"],\n            linewidth = 1.2, linetype = 2) +\n  facet_grid(`harvest-adjustment` ~ `harvest-variance`) +\n  labs(x = \"steps\", y = \"households\") +\n  theme(legend.position = \"right\")\n\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsvg \n  2 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(plot_name)\n```\n\n::: {.cell-output-display}\n![](assets/netlogo/experiments/Artificial Anasazi_experiments experiment harvest adjustment variance-trajectories.png)\n:::\n:::\n\n",
    "supporting": [
      "analysis-preprocessing_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/d3-3.3.8/d3.min.js\"></script>\n<script src=\"site_libs/dagre-0.4.0/dagre-d3.min.js\"></script>\n<link href=\"site_libs/mermaid-0.3.0/dist/mermaid.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/mermaid-0.3.0/dist/mermaid.slim.min.js\"></script>\n<link href=\"site_libs/DiagrammeR-styles-0.2/styles.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/chromatography-0.1/chromatography.js\"></script>\n<script src=\"site_libs/DiagrammeR-binding-1.0.11/DiagrammeR.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}