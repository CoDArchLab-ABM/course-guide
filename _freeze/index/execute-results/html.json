{
  "hash": "037ce76b4900d5b12b4ca43357beb8ea",
  "result": {
    "engine": "knitr",
    "markdown": "# Course overview {.unnumbered}\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n[Agent-based modelling for archaeologists. From concept to application and publication (14436.0398)](https://vvz.ruhr-uni-bochum.de/campus/all/event.asp?gguid=0xE2AAF8DAB10F4972B8854C6EDC49A4DD&from=&tabID=1&tguid=0x5980070F0C7A42899012ACFE7660AC4B&objgguid=NEW&lang=de)\n\n**Time slot**: Monday, 10:00-11:30\n\n**Place**: KÃ¼pperstift, Kerpener Str., 30, 2nd floor (125/02) [CoDArchLab](https://archaeologie.phil-fak.uni-koeln.de/institut/fachgebiete/archaeoinformatik/codarchlab)\n\n**Course instructor**: Andreas Angourakis\n\n## Course summary\n\nThis course introduces the basic concepts and workflow of simulation and agent-based modelling (ABM), as used in archaeology.\n\nMore specifically, we will cover the prototyping of a conceptual model into a working simulation model, the 'refactoring' of code (cleaning, restructuring, optimizing), the re-use of published model parts and algorithms, the exploration of alternative designs, and the use of geographic, climatic and archaeological data to frame the model in a specific case study.\n\nThis tutorial uses [NetLogo](https://ccl.northwestern.edu/netlogo/), a flexible well-established modelling platform known for its relatively low-level entry requirements in terms of programming experience. It has been particularly used in social sciences and ecology for research and educational purposes.\n\nThe course offers implementation examples of least path cost algorithms, hydrological and land productivity modelling, network dynamics, and cultural evolution. Additionally, we learn the basics of Git and GitHub for version control, which will help us organize, maintain, and share models and related materials.\n\n## Course schedule\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|   |Date       |Topic                                                                      |\n|:--|:----------|:--------------------------------------------------------------------------|\n|1  |2025-10-20 |Introduction                                                               |\n|2  |2025-10-27 |Learning to model processes                                                |\n|3  |2025-11-03 |Preparing as a software developer                                          |\n|4  |2025-11-10 |Programming for simulation modelling                                       |\n|5  |2025-11-17 |Pond Trade (I): basics and cellular automata                               |\n|6  |2025-11-24 |Pond Trade (II): agents and mechanisms                                     |\n|7  |2025-12-01 |Pond Trade (III): advanced mechanisms, output stats and modularity         |\n|8  |2025-12-08 |Messara Trade (I): case, design and spatial input data                     |\n|9  |2025-12-15 |Messara Trade (II): time-series input data and plugging modules            |\n|10 |2026-01-05 |Messara Trade (III): verification, optimisation, refactoring and extension |\n|11 |2026-01-12 |Designing and running Simulation experiments                               |\n|12 |2026-01-19 |Analysis of simulation results                                             |\n|13 |2026-01-26 |free practice                                                              |\n|14 |2026-02-02 |free practice                                                              |\n\n\n:::\n:::\n\n\n## Evaluation\n\nAttendance and completion of small exercises, individually or as a group.\n\n## Acknowledgements\n\nThe conception of the course structure, as well as the short summaries, exercises, and images shown in each chapter, greatly benefited from [Large Language Models](https://en.wikipedia.org/wiki/Large_language_model) used as companion writer and programmer. As such, we own greatly to the current richness of reference information freely available on Internet.\n\nThe models and services used are:\n\n- [ChatGPT](https://chatgpt.com/) (GPT-4o) by OpenAI for brainstorming, text and code drafting and writing suggestions, code refactoring and documentation, and collection and articulation of references.  \n- [Google NotebookLM](https://notebooklm.google/) for summary of references and text writing suggestions.\n- [WebChatGPT](https://tools.zmo.ai/webchatgpt), a free browser extension that enhances ChatGPT by providing Internet access directly within the chat interface, used to aid Internet search.\n- [Leonardo.ai](https://app.leonardo.ai/) (user tokens) for generating purely aesthetic visual assets.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}