{"title":"Integrating a submodel","markdown":{"headingText":"Integrating a submodel","headingAttr":{"id":"messara-soil-water","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\nLet us build the next module, `ARID`, over what we just implemented in the `load-weather-data` module.\n\n## Module variables\n\nBesides the weather variables we have on our dataset, ARID requires several other variables related to soil properties and cover. We will make an exception to our code legibility rule and use the notation from the original implementation (Wallach et al. 2019).\n\n```Netlogo\nglobals\n[\n  ...\n\n  ;;; default constants\n\n  MUF ; Water Uptake coefficient (mm^3.mm^-3)\n  WP ; Water content at wilting Point (cm^3.cm^-3)\n\n  ;;;; ETr\n  albedo_min\n  albedo_max\n\n  ;;;; Soil Water Balance model global parameters\n  WHC_min\n  WHC_max\n  DC_min\n  DC_max\n  z_min\n  z_max\n  CN_min\n  CN_max\n\n  ...\n]\n\n...\n\npatches-own\n[\n  ...\n\n  ;;;; soil\n  DC ; Drainage coefficient (mm^3 mm^-3).\n  z ; root zone depth (mm).\n  CN ; Runoff curve number.\n  FC ; Water content at field capacity (cm^3.cm^-3)\n  WHC ; Water Holding Capacity of the soil (cm^3.cm^-3). Typical range from 0.05 to 0.25\n\n  ARID ; ARID index after Woli et al. 2012, ranging form 0 (no water shortage) to 1 (extreme water shortage)\n  WAT ; Water content in the soil profile for the rooting depth (mm)\n  WATp ; Volumetric Soil Water content (fraction : mm.mm-1). calculated as WAT/z\n\n  ;;;; cover\n  albedo ; canopy reflection or albedo\n  netSolarRadiation ; net solar radiation discount canopy reflection or albedo\n  ETr ; reference evapotranspiration\n]\n```\n\n## Module parameters\n\nWe will use a randomised configuration of most of these patch variables using hyperparameters giving the envelope of variation. The Indus Village eventually escapes this initial solution by calculating these variables based on various datasets and submodels. We will, however, use it for the sake of simplicity. As Wallach et al. (2019), we will use two global variables as constants (`MUF` and `WP`) and create some extra procedures that will help us register and apply a default configuration of the hyperparameters (`parameters-check` and `parameters-to-default`).\n\n```NetLogo\nto set-constants\n\n  ; \"constants\" are variables that will not be explored as parameters\n  ; and may be used during a simulation.\n\n  ; MUF : Water Uptake coefficient (mm^3 mm^-3)\n  set MUF 0.096\n\n  ; WP : Water content at wilting Point (cm^3.cm^-3)\n  set WP 0.06\n\nend\n\nto set-parameters\n\n  ; set random seed\n  random-seed seed\n\n  ;;; load weather input data from file\n  load-weather-input-data-table\n\n  parameters-check\n\n  ;;; weather parameters are left with default values, but effectively ignored given that input weather is used.\n\n  set albedo_min 1E-6 + random-float 0.3\n  set albedo_max albedo_min + random-float 0.3\n\n  ;;; Soil Water Balance model\n  set WHC_min random-float 0.1\n  set WHC_max WHC_min + random-float 0.1\n  set DC_min 1E-6 + random-float 0.45\n  set DC_max DC_min + random-float 0.45\n  set z_min random-float 1000\n  set z_max z_min + random-float 1000\n  set CN_min random-float 40\n  set CN_max CN_min + random-float 50\n\nend\n\nto parameters-check\n\n  ;;; check if values were reset to 0 (NetLogo does that from time to time...!)\n  ;;; and set default values (assuming they are not 0)\n\n  if (par_albedo_min = 0)                                        [ set par_albedo_min                              0.1 ]\n  if (par_albedo_max = 0)                                        [ set par_albedo_max                              0.5 ]\n\n  if (water-holding-capacity_min = 0)                            [ set water-holding-capacity_min                    0.05 ]\n  if (water-holding-capacity_max = 0)                            [ set water-holding-capacity_max                    0.25 ]\n  if (drainage-coefficient_min = 0)                              [ set drainage-coefficient_min                      0.3 ]\n  if (drainage-coefficient_max = 0)                              [ set drainage-coefficient_max                      0.7 ]\n  if (root-zone-depth_min = 0)                                   [ set root-zone-depth_min                         200 ]\n  if (root-zone-depth_max = 0)                                   [ set root-zone-depth_max                        2000 ]\n  if (runoff-curve_min = 0)                                      [ set runoff-curve_min                             30 ]\n  if (runoff-curve_max = 0)                                      [ set runoff-curve_max                             80 ]\n\nend\n\nto parameters-to-default\n\n  ;;; set parameters to a default value\n  set par_albedo_min                                            0.1\n  set par_albedo_max                                            0.5\n\n  set water-holding-capacity_min                                0.05\n  set water-holding-capacity_max                                0.25\n  set drainage-coefficient_min                                  0.3\n  set drainage-coefficient_max                                  0.7\n  set root-zone-depth_min                                     200\n  set root-zone-depth_max                                    2000\n  set runoff-curve_min                                         30\n  set runoff-curve_max                                         80\n\nend\n\n...\n\nto setup-soil-water-properties\n\n  ask patchesWithElevationData\n  [\n    set albedo albedo_min + random-float (albedo_max - albedo_min)\n\n    ; Water Holding Capacity of the soil (cm^3 cm^-3).\n    set WHC WHC_min + random-float (WHC_max - WHC_min)\n    ; DC :  Drainage coefficient (mm^3 mm^-3)\n    set DC DC_min + random-float (DC_max - DC_min)\n    ; z : root zone depth (mm)\n    set z z_min + random (z_max - z_min)\n    ; CN : Runoff curve number\n    set CN CN_min + random (CN_max - CN_max)\n\n    ; FC : Water content at field capacity (cm^3.cm^-3)\n    set FC WP + WHC\n    ; WAT0 : Initial Water content (mm)\n    set WAT z * FC\n  ]\n\nend\n```\n\n## Connector variables and procedures\n\nIn our previous implementation of `set-day-weather-from-input-data`, we must now add a new final step, where `netSolarRadiation` and `ETr` (reference evapotranspiration) are set for each patch. We also need to implement a procedure to estimate `ETr` based on an FAO standard (Allen et al. 1998).\n\n> Allen, Richard G., Luis S. Pereira, Dirk Raes, and Martin Smith. 1998. Crop Evapotranspiration - FAO Irrigation and Drainage Paper No. 56. Rome: FAO. http://www.fao.org/3/X0490E/x0490e00.htm.\n\n```NetLogo\n\nto set-day-weather-from-input-data [ dayOfYear year ]\n\n  ...\n\n  ask patchesWithElevationData\n  [\n    set netSolarRadiation (1 - albedo) * solarRadiation\n    set ETr get-ETr\n  ]\n\nend\n\n...\n\nto-report get-ETr\n\n  ;;; useful references:\n  ;;; Suleiman A A and Hoogenboom G 2007\n  ;;; Comparison of Priestley-Taylor and FAO-56 Penman-Monteith for Daily Reference Evapotranspiration Estimation in Georgia\n  ;;; J. Irrig. Drain. Eng. 133 175–82 Online: http://ascelibrary.org/doi/10.1061/%28ASCE%290733-9437%282007%29133%3A2%28175%29\n  ;;; also: Jia et al. 2013 - doi:10.4172/2168-9768.1000112\n  ;;; Allen, R. G., Pereira, L. A., Raes, D., and Smith, M. 1998.\n  ;;; “Crop evapotranspiration.”FAO irrigation and  drainage paper 56, FAO, Rome.\n  ;;; also: http://www.fao.org/3/X0490E/x0490e07.htm\n  ;;; constants found in: http://www.fao.org/3/X0490E/x0490e07.htm\n  ;;; see also r package: Evapotranspiration (consult source code)\n\n  let windSpeed 2 ; as recommended by: http://www.fao.org/3/X0490E/x0490e07.htm#estimating%20missing%20climatic%20data\n\n  ;;; estimation of saturated vapour pressure (e_s) and actual vapour pressure (e_a)\n  let e_s (get-vapour-pressure T_max + get-vapour-pressure T_min) / 2\n  let e_a get-vapour-pressure T_min\n  ; ... in absence of dew point temperature, as recommended by\n  ; http://www.fao.org/3/X0490E/x0490e07.htm#estimating%20missing%20climatic%20data\n  ; however, possibly min temp > dew temp under arid conditions\n\n  ;;; slope of  the  vapor  pressure-temperature  curve (kPa ºC−1)\n  let DELTA 4098 * (get-vapour-pressure T) / (T + 237.3) ^ 2\n\n  ;;; latent heat of vaporisation = 2.45 MJ.kg^-1\n  let lambda 2.45\n\n  ;;; specific heat at constant pressure, 1.013 10-3 [MJ kg-1 °C-1]\n  let c_p 1.013 * 10 ^ -3\n  ;;; ratio molecular weight of water vapour/dry air\n  let epsilon 0.622\n  ;;; atmospheric pressure (kPa)\n  let P 101.3 * ((293 - 0.0065 * elevation) / 293) ^ 5.26\n  ;;; psychometric constant (kPa ºC−1)\n  let gamma c_p * P / (epsilon * lambda)\n\n  ;;; Penman-Monteith equation from: fao.org/3/X0490E/x0490e0 ; and from: weap21.org/WebHelp/Mabia_Alg ETRef.htm\n\n  ; 900 and 0.34 for the grass reference; 1600 and 0.38 for the alfalfa reference\n  let C_n 900\n  let C_d 0.34\n\n  let ETr_temp (0.408 * DELTA * netSolarRadiation + gamma * (C_n / (T + 273)) * windSpeed * (e_s - e_a)) / (DELTA + gamma * (1 + C_d * windSpeed))\n\n  report ETr_temp\n\nend\n\nto-report get-vapour-pressure [ temp ]\n\n  report (0.6108 * exp(17.27 * temp / (temp + 237.3)))\n\nend\n```\n\n## Implementing the main algorithm\n\nNext, we add `update-WAT`, which contains the calculations that finally outputs ARID.\n\n```NetLogo\nto update-WAT\n\n  ; Soil Water Balance model\n  ; Using the approach of:\n  ; 'Working with dynamic crop models: Methods, tools, and examples for agriculture and enviromnent'\n  ;  Daniel Wallach, David Makowski, James W. Jones, François Brun (2006, 2014, 2019)\n  ;  Model description in p. 24-28, R code example in p. 138-144.\n  ;  see also https://github.com/cran/ZeBook/blob/master/R/watbal.model.r\n  ; Some additional info about run off at: https://engineering.purdue.edu/mapserve/LTHIA7/documentation/scs.htm\n  ; and at: https://en.wikipedia.org/wiki/Runoff_curve_number\n\n  ; Maximum abstraction (mm; for run off)\n  let S 25400 / CN - 254\n  ; Initial Abstraction (mm; for run off)\n  let IA 0.2 * S\n  ; WATfc : Maximum Water content at field capacity (mm)\n  let WATfc FC * z\n  ; WATwp : Water content at wilting Point (mm)\n  let WATwp WP * z\n\n  ; Change in Water Before Drainage (Precipitation - Runoff)\n  let RO 0\n  if (RAIN > IA)\n  [ set RO ((RAIN - 0.2 * S) ^ 2) / (RAIN + 0.8 * S) ]\n  ; Calculating the amount of deep drainage\n  let DR 0\n  if (WAT + RAIN - RO > WATfc)\n  [ set DR DC * (WAT + RAIN - RO - WATfc) ]\n\n  ; Calculate rate of change of state variable WAT\n  ; Compute maximum water uptake by plant roots on a day, RWUM\n  let RWUM MUF * (WAT + RAIN - RO - DR - WATwp)\n  ; Calculate the amount of water lost through transpiration (TR)\n  let TR min (list RWUM ETr)\n\n  let dWAT RAIN - RO - DR - TR\n  set WAT WAT + dWAT\n\n  set WATp WAT / z\n\n  set ARID 0\n  if (TR < ETr)\n  [ set ARID 1 - TR / ETr ]\n\nend\n```\n\n## Merging with spatial data module\n\nUntil this point, we are still lacking our spatial data. Let us implement the necessary code to be able to import the processed data we output from the `flows` module.\n\n```NetLogo\nextensions [ csv gis ]\n\n...\n\nbreed [ sites site ]\n\nbreed [ flowHolders flowHolder ]\n\n...\n\nglobals\n[\n  patchesWithElevationData\n  noElevationDataTag\n  maxElevation\n\n  width\n  height\n\n  ;;; GIS data holders\n  sitesData_EMIII-MMIA\n  sitesData_MMIB\n  elevationData\n  riversData\n\n  ...\n]\n\nsites-own\n[\n  name\n  siteType\n  period\n]\n\npatches-own\n[\n  elevation ; elevation above sea level [m]\n\n  flow_direction        ; the numeric code for the (main) direction of flow or\n                        ; drainage within the land unit.\n                        ; Following Jenson & Domingue (1988) convention:\n                        ; NW = 64,   N = 128,        NE = 1,\n                        ; W = 32,     <CENTRE>,   E = 2,\n                        ; SW = 16,     S = 8,          SE = 4\n\n  flow_receive          ; Boolean variable stating whether or not the land unit receives\n                        ; the flow of a neighbour.\n\n  flow_accumulation     ; the amount of flow units accumulated in the land unit.\n                        ; A Flow unit is the volume of runoff water flowing from one land unit\n                        ; to another (assumed constant and without losses).\n  flow_accumulationState ; the state of the land unit regarding the calculation of flow\n                        ; accumulation (auxiliary variable).\n\n  isRiver\n\n  ...\n]\n\n...\n\n\nto import-map-with-flows\n  \n  import-world \"data/terrainWithFlows/BlockC_module2_flows world.csv\"\n  \n  ;;; reduce patch size in pixels\n  set-patch-size 3\n  \nend\n\n...\n\n```\n\n## Visualisation\n\nBefore advancing, we can implement a display procedure expanding it also to be able to paint patches according to the new patch variables, using the \"chooser\" parameter `display-mode`:\n\n```NetLogo\n\nto refresh-view\n  \n  if (display-mode = \"elevation\")\n  [\n    ask patchesWithElevationData [ display-elevation ]\n  ]\n\n  if (display-mode = \"albedo\")\n  [\n    ask patchesWithElevationData [ display-albedo ]\n  ]\n\n  if (display-mode = \"ETr\")\n  [\n    let maxETr max [ETr] of patchesWithElevationData\n    ask patchesWithElevationData [ display-ETr maxETr ]\n  ]\n\n  if (display-mode = \"drainage coefficient (DC)\")\n  [\n    ask patchesWithElevationData [ display-DC ]\n  ]\n\n  if (display-mode = \"root zone depth (z)\")\n  [\n    let maxZ max [z] of patchesWithElevationData\n    ask patchesWithElevationData [ display-z maxZ ]\n  ]\n\n  if (display-mode = \"runoff curve number (CN)\")\n  [\n    let maxCN max [CN] of patchesWithElevationData\n    ask patchesWithElevationData [ display-CN maxCN ]\n  ]\n\n  if (display-mode = \"water content at field capacity (FC)\")\n  [\n    let maxFC max [FC] of patchesWithElevationData\n    ask patchesWithElevationData [ display-FC maxFC ]\n  ]\n\n  if (display-mode = \"water holding Capacity (WHC)\")\n  [\n    let maxWHC max [WHC] of patchesWithElevationData\n    ask patchesWithElevationData [ display-WHC maxWHC ]\n  ]\n\n  if (display-mode = \"soil water content (WATp)\")\n  [\n    let maxWATp max [WATp] of patchesWithElevationData\n    ask patchesWithElevationData [ display-WATp maxWATp ]\n  ]\n\n  if (display-mode = \"ARID coefficient\")\n  [\n    ask patchesWithElevationData [ display-arid ]\n  ]\n\nend\n\nto display-elevation\n\n  let elevationGradient 100 + (155 * (elevation / maxElevation))\n  set pcolor rgb (elevationGradient - 100) elevationGradient 0\n\nend\n\nto display-albedo\n\n  set pcolor 1 + 9 * albedo\n\nend\n\nto display-ETr [ maxETr ]\n\n  ifelse (maxETr = 0)\n  [ set pcolor 25 ]\n  [ set pcolor 22 + 6 * (1 - ETr / maxETr) ]\n\nend\n\nto display-DC\n\n  set pcolor 112 + 6 * (1 - DC)\n\nend\n\nto display-z [ maxZ ]\n\n  set pcolor 42 + 8 * (1 - z / maxZ)\n\nend\n\nto display-CN [ maxCN ]\n\n  set pcolor 72 + 6 * (1 - CN / maxCN)\n\nend\n\nto display-FC [ maxFC ]\n\n  set pcolor 82 + 6 * (1 - FC / maxFC)\n\nend\n\nto display-WHC [ maxWHC ]\n\n  set pcolor 92 + 6 * (1 - WHC / maxWHC)\n\nend\n\nto display-WATp [ maxWATp ]\n\n  set pcolor 102 + 6 * (1 - WATp / maxWATp)\n\nend\n\nto display-ARID\n\n  set pcolor 12 + 6 * ARID\n\nend\n```\n\n## Combining with flow accumulation algorithm\n\nLast, we finalise this module by implementing a solution that uses `flow_accumulation` to modulate the variation in ARID, as a proxy of the effect of the regional hydrology on the local soil water balance. The solution use the patch variable `ARID_modifier`, set during setup according to the parameter `ARID-decrease-per-flow-accumulation` and the local relative flow accumulation (flow_accumulation / maxFlowAccumulation). It then modifies `ARID` each day as a simple scalar.\n\n```NetLogo\npatches-own\n[\n  ...\n\n  ARID_modifier ; modifier coefficient based on the relative value of flow_accumulation\n]\n\n...\n\nto setup\n\n  clear-all\n\n  ; --- loading/testing parameters -----------\n\n  import-map-with-flows ; import-world must be the first step\n\n  set-constants\n\n  set-parameters\n\n  setup-patches\n\n  ; --- core procedures ----------------------\n\n  set currentYear weatherInputData_firstYear\n  set currentDayOfYear 1\n\n  ;;; values are taken from input data\n  set-day-weather-from-input-data currentDayOfYear currentYear\n\n  ask patchesWithElevationData [ update-WAT ]\n\n  ; --- display & output handling ------------------------\n\n  refresh-view\n\n  ; -- time -------------------------------------\n\n  reset-ticks\n\nend\n\n...\n\nto setup-patches\n\n  setup-soil-water-properties\n  \n  setup-ARID-modifier\n\nend\n\n...\n\nto setup-ARID-modifier\n  \n  ask patchesWithElevationData\n  [\n    set ARID_modifier (1 - ARID-decrease-per-flow-accumulation * (flow_accumulation / maxFlowAccumulation))\n  ]\n  \nend\n\n...\n\nto go\n\n  ; --- core procedures -------------------------\n\n  ;;; values are taken from input data\n  set-day-weather-from-input-data currentDayOfYear currentYear\n\n  ask patchesWithElevationData [ update-WAT modify-ARID ]\n\n  ; --- output handling ------------------------\n\n  refresh-view\n\n  ; -- time -------------------------------------\n\n  advance-time\n\n  tick\n\n  ; --- stop conditions -------------------------\n\n  if (currentYear = weatherInputData_lastYear and currentDayOfYear = last weatherInputData_yearLengthInDays) [stop]\n\nend\n\n...\n\nto modify-ARID\n\n  set ARID ARID * ARID_modifier\n\nend\n```\n\n## Test\n\nOur solution to link `flow_accumulation` and `ARID` is undoubtedly arbitrary. Such solutions should always be temporary and prompt further research and coding excursions. For the tutorial, however, we are good enough to go forward.\n\n![Screenshot of the 'ARID' module (tick 100)](assets/screenshots/BlockC_module4_ARID interface_tick100.png)  \n*Screenshot of the 'ARID' module (tick 100)*\n\n![Screenshot of the 'ARID' module (tick 150)](assets/screenshots/BlockC_module4_ARID interface_tick150.png)  \n*Screenshot of the 'ARID' module (tick 150)*\n\n![Screenshot of the 'ARID' module (tick 200)](assets/screenshots/BlockC_module4_ARID interface_tick200.png)  \n*Screenshot of the 'ARID' module (tick 200)*\n\nSee the fully implemented version of this module: `BlockC_module3_ARID.nlogo`.\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"svg","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["assets/styles.css"],"output-file":"messara-soil-water.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","bibliography":["references.bib"],"comments":{"hypothesis":true},"theme":"lumen"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}